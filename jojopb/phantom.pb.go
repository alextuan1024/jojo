// Code generated by protoc-gen-go. DO NOT EDIT.
// source: phantom.proto

package jojo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RejectHumanityReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Trace                int32    `protobuf:"varint,2,opt,name=trace,proto3" json:"trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RejectHumanityReq) Reset()         { *m = RejectHumanityReq{} }
func (m *RejectHumanityReq) String() string { return proto.CompactTextString(m) }
func (*RejectHumanityReq) ProtoMessage()    {}
func (*RejectHumanityReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbed077fd493b760, []int{0}
}

func (m *RejectHumanityReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RejectHumanityReq.Unmarshal(m, b)
}
func (m *RejectHumanityReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RejectHumanityReq.Marshal(b, m, deterministic)
}
func (m *RejectHumanityReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RejectHumanityReq.Merge(m, src)
}
func (m *RejectHumanityReq) XXX_Size() int {
	return xxx_messageInfo_RejectHumanityReq.Size(m)
}
func (m *RejectHumanityReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RejectHumanityReq.DiscardUnknown(m)
}

var xxx_messageInfo_RejectHumanityReq proto.InternalMessageInfo

func (m *RejectHumanityReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RejectHumanityReq) GetTrace() int32 {
	if m != nil {
		return m.Trace
	}
	return 0
}

type RejectHumanityResp struct {
	Line                 string   `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
	Trace                int32    `protobuf:"varint,2,opt,name=trace,proto3" json:"trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RejectHumanityResp) Reset()         { *m = RejectHumanityResp{} }
func (m *RejectHumanityResp) String() string { return proto.CompactTextString(m) }
func (*RejectHumanityResp) ProtoMessage()    {}
func (*RejectHumanityResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbed077fd493b760, []int{1}
}

func (m *RejectHumanityResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RejectHumanityResp.Unmarshal(m, b)
}
func (m *RejectHumanityResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RejectHumanityResp.Marshal(b, m, deterministic)
}
func (m *RejectHumanityResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RejectHumanityResp.Merge(m, src)
}
func (m *RejectHumanityResp) XXX_Size() int {
	return xxx_messageInfo_RejectHumanityResp.Size(m)
}
func (m *RejectHumanityResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RejectHumanityResp.DiscardUnknown(m)
}

var xxx_messageInfo_RejectHumanityResp proto.InternalMessageInfo

func (m *RejectHumanityResp) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

func (m *RejectHumanityResp) GetTrace() int32 {
	if m != nil {
		return m.Trace
	}
	return 0
}

func init() {
	proto.RegisterType((*RejectHumanityReq)(nil), "jojo.RejectHumanityReq")
	proto.RegisterType((*RejectHumanityResp)(nil), "jojo.RejectHumanityResp")
}

func init() { proto.RegisterFile("phantom.proto", fileDescriptor_cbed077fd493b760) }

var fileDescriptor_cbed077fd493b760 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0xc8, 0x48, 0xcc,
	0x2b, 0xc9, 0xcf, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0xca, 0xcf, 0xca, 0x57,
	0xb2, 0xe5, 0x12, 0x0c, 0x4a, 0xcd, 0x4a, 0x4d, 0x2e, 0xf1, 0x28, 0xcd, 0x4d, 0xcc, 0xcb, 0x2c,
	0xa9, 0x0c, 0x4a, 0x2d, 0x14, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x44, 0xb8, 0x58, 0x4b, 0x8a, 0x12, 0x93, 0x53, 0x25, 0x98,
	0x14, 0x18, 0x35, 0x58, 0x83, 0x20, 0x1c, 0x25, 0x3b, 0x2e, 0x21, 0x74, 0xed, 0xc5, 0x05, 0x20,
	0xfd, 0x39, 0x99, 0x79, 0x70, 0xfd, 0x20, 0x36, 0x76, 0xfd, 0x46, 0x7e, 0x5c, 0xec, 0x01, 0x10,
	0x57, 0x09, 0x39, 0x73, 0xf1, 0xa1, 0x1a, 0x25, 0x24, 0xae, 0x07, 0x72, 0xa2, 0x1e, 0x86, 0xfb,
	0xa4, 0x24, 0xb0, 0x4b, 0x14, 0x17, 0x24, 0xb1, 0x81, 0xfd, 0x66, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0x17, 0x15, 0x93, 0x0e, 0xec, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PhantomClient is the client API for Phantom service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PhantomClient interface {
	RejectHumanity(ctx context.Context, in *RejectHumanityReq, opts ...grpc.CallOption) (*RejectHumanityResp, error)
}

type phantomClient struct {
	cc *grpc.ClientConn
}

func NewPhantomClient(cc *grpc.ClientConn) PhantomClient {
	return &phantomClient{cc}
}

func (c *phantomClient) RejectHumanity(ctx context.Context, in *RejectHumanityReq, opts ...grpc.CallOption) (*RejectHumanityResp, error) {
	out := new(RejectHumanityResp)
	err := c.cc.Invoke(ctx, "/jojo.Phantom/RejectHumanity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhantomServer is the server API for Phantom service.
type PhantomServer interface {
	RejectHumanity(context.Context, *RejectHumanityReq) (*RejectHumanityResp, error)
}

// UnimplementedPhantomServer can be embedded to have forward compatible implementations.
type UnimplementedPhantomServer struct {
}

func (*UnimplementedPhantomServer) RejectHumanity(ctx context.Context, req *RejectHumanityReq) (*RejectHumanityResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RejectHumanity not implemented")
}

func RegisterPhantomServer(s *grpc.Server, srv PhantomServer) {
	s.RegisterService(&_Phantom_serviceDesc, srv)
}

func _Phantom_RejectHumanity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RejectHumanityReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhantomServer).RejectHumanity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jojo.Phantom/RejectHumanity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhantomServer).RejectHumanity(ctx, req.(*RejectHumanityReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Phantom_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jojo.Phantom",
	HandlerType: (*PhantomServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RejectHumanity",
			Handler:    _Phantom_RejectHumanity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "phantom.proto",
}
